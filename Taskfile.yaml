# https://taskfile.dev
version: "3"
tasks:
  init:
    desc: Install some important commands and tools
    cmds:
      # tools
      - go install github.com/dkorunic/betteralign/cmd/betteralign@latest
      - go install github.com/goreleaser/goreleaser@latest
      # linting, formatting
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.58.1
      - go install go.uber.org/nilaway/cmd/nilaway@latest
      - go install github.com/segmentio/golines@latest
      - go install golang.org/x/tools/cmd/goimports@latest
      - go install github.com/securego/gosec/v2/cmd/gosec@latest
      - go install mvdan.cc/gofumpt@latest
      # - go get
      - go mod download
  assets:
    desc: Build the assets
    cmds:
      - echo "Building assets"
  generate:
    desc: Generate stuff and things
    cmds:
      - go generate ./...
      # - swag init -g ./cmd/api/main.go
  run:
    desc: Run the application
    deps:
      - assets
      - generate
    cmds:
      - go run ./cmd/app/...
  dev:
    desc: Develop the api
    deps:
      - assets
      - generate
    cmds:
      - air -c .air.api.toml
  build:
    desc: build the api
    deps:
      - assets
      - generate
    cmds:
      # - go build -o ./bin/api ./cmd/api/...
      - go build -o=../../dist/apps/example-go-app/ ./cmd/server
  docker-build:
    desc: Build the docker image
    deps:
      - build
    cmds:
      - docker buildx build -t halamert/hello-world-docker-go-action -f Dockerfile . --load
  docker-push:
    desc: Push the docker image
    deps:
      - docker-build
    cmds:
      - docker buildx build -t halamert/hello-world-docker-go-action -f Dockerfile . --push
  preview:
    desc: Build and serve the api
    deps:
      - build
    cmds:
      # - ./bin/api
      - ../../dist/apps/example-go-app/server
  fix:
    desc: Fix the code
    cmds:
      - golines --shorten-comments -w .
      - goimports -w .
      - gofumpt -w .
      - betteralign -apply ./...
      - golangci-lint run --fix
      - go mod tidy
  lint:
    desc: Lint project
    cmds:
      - golines --shorten-comments -l .
      - goimports -l .
      - gofumpt -l .
      - golangci-lint run
      - gosec ./...
      - nilaway ./...
      - go vet ./...
  test:
    desc: Run the tests
    cmds:
      - go test ./...
  release:
    desc: Release the application
    cmds:
      - goreleaser release --rm-dist
